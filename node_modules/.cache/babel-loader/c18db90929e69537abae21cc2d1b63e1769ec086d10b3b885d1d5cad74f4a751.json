{"ast":null,"code":"import React,{useEffect,useState}from'react';import{MapContainer,TileLayer,Marker,Popup,useMap}from'react-leaflet';import'leaflet/dist/leaflet.css';import L from'leaflet';import carIconImg from'../../car.svg';//import datosGeoJSON from '../maps/datosGeoJSON'\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Mapa(){const[routeData,setRouteData]=useState(null);// Estado para almacenar los datos de la ruta\n// Define el icono del carro\nconst carIcon=L.icon({iconUrl:carIconImg,// Ruta al icono de carro\niconSize:[32,32]// Tama침o del icono\n});// Funci칩n para trazar la ruta en el mapa\nconst TrazarRuta=()=>{const map=useMap();const coordinates=[[19.5,-99.14946],// Coordenadas del primer punto (latitud, longitud)\n[19.47101,-99.13781],// Coordenadas del segundo punto (latitud, longitud)\n[19.37101,-99.12781]];const polyline=L.polyline(coordinates,{color:'blue'}).addTo(map);// Ajusta el mapa para que se ajuste a la ruta\nmap.fitBounds(polyline.getBounds());return null;};return/*#__PURE__*/_jsxs(MapContainer,{center:[19.5,-99.14946],zoom:13,style:{height:'400px',width:'auto',margin:'33px'},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),/*#__PURE__*/_jsx(TrazarRuta,{}),/*#__PURE__*/_jsx(Marker,{position:[19.50047,-99.14946],icon:carIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Inicio\"})}),/*#__PURE__*/_jsx(Marker,{position:[19.47101,-99.13781],icon:carIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Fin\"})})]});}export default Mapa;","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","useMap","L","carIconImg","jsx","_jsx","jsxs","_jsxs","Mapa","routeData","setRouteData","carIcon","icon","iconUrl","iconSize","TrazarRuta","map","coordinates","polyline","color","addTo","fitBounds","getBounds","center","zoom","style","height","width","margin","children","url","position"],"sources":["/Users/rodrigo/Desktop/traxiapp/src/components/maps/Mapa.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport carIconImg from '../../car.svg';\n//import datosGeoJSON from '../maps/datosGeoJSON'\n\nfunction Mapa() {\n    const [routeData, setRouteData] = useState(null); // Estado para almacenar los datos de la ruta\n\n    // Define el icono del carro\n    const carIcon = L.icon({\n        iconUrl: carIconImg, // Ruta al icono de carro\n        iconSize: [32, 32], // Tama침o del icono\n    });\n\n    // Funci칩n para trazar la ruta en el mapa\n    const TrazarRuta = () => {\n        const map = useMap();\n       \n        const coordinates = [\n            [19.5, -99.14946], // Coordenadas del primer punto (latitud, longitud)\n            [19.47101, -99.13781],   // Coordenadas del segundo punto (latitud, longitud)\n            [19.37101, -99.12781],\n        ];\n            const polyline = L.polyline(coordinates, { color: 'blue' }).addTo(map);\n            // Ajusta el mapa para que se ajuste a la ruta\n            map.fitBounds(polyline.getBounds());\n        return null;\n    };\n\n    return (\n        <MapContainer center={[19.5, -99.14946]} zoom={13} style={{ height: '400px',width: 'auto',margin: '33px' }}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n            <TrazarRuta />\n            {/* Renderiza el marcador de inicio */}\n            <Marker position={[19.50047, -99.14946]} icon={carIcon}>\n                <Popup>Inicio</Popup>\n            </Marker>\n            {/* Renderiza el marcador de fin */}\n            <Marker position={[19.47101, -99.13781]} icon={carIcon}>\n                <Popup>Fin</Popup>\n            </Marker>\n        </MapContainer>\n    );\n}\n\nexport default Mapa;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,YAAY,CAAEC,SAAS,CAAEC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,eAAe,CAC9E,MAAO,0BAA0B,CACjC,MAAO,CAAAC,CAAC,KAAM,SAAS,CACvB,MAAO,CAAAC,UAAU,KAAM,eAAe,CACtC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACZ,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAAE;AAElD;AACA,KAAM,CAAAe,OAAO,CAAGT,CAAC,CAACU,IAAI,CAAC,CACnBC,OAAO,CAAEV,UAAU,CAAE;AACrBW,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CAAG;AACxB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,GAAG,CAAGf,MAAM,CAAC,CAAC,CAEpB,KAAM,CAAAgB,WAAW,CAAG,CAChB,CAAC,IAAI,CAAE,CAAC,QAAQ,CAAC,CAAE;AACnB,CAAC,QAAQ,CAAE,CAAC,QAAQ,CAAC,CAAI;AACzB,CAAC,QAAQ,CAAE,CAAC,QAAQ,CAAC,CACxB,CACG,KAAM,CAAAC,QAAQ,CAAGhB,CAAC,CAACgB,QAAQ,CAACD,WAAW,CAAE,CAAEE,KAAK,CAAE,MAAO,CAAC,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC,CACtE;AACAA,GAAG,CAACK,SAAS,CAACH,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC,CACvC,MAAO,KAAI,CACf,CAAC,CAED,mBACIf,KAAA,CAACV,YAAY,EAAC0B,MAAM,CAAE,CAAC,IAAI,CAAE,CAAC,QAAQ,CAAE,CAACC,IAAI,CAAE,EAAG,CAACC,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAO,CAACC,KAAK,CAAE,MAAM,CAACC,MAAM,CAAE,MAAO,CAAE,CAAAC,QAAA,eACvGxB,IAAA,CAACP,SAAS,EAACgC,GAAG,CAAC,oDAAoD,CAAE,CAAC,cAEtEzB,IAAA,CAACU,UAAU,GAAE,CAAC,cAEdV,IAAA,CAACN,MAAM,EAACgC,QAAQ,CAAE,CAAC,QAAQ,CAAE,CAAC,QAAQ,CAAE,CAACnB,IAAI,CAAED,OAAQ,CAAAkB,QAAA,cACnDxB,IAAA,CAACL,KAAK,EAAA6B,QAAA,CAAC,QAAM,CAAO,CAAC,CACjB,CAAC,cAETxB,IAAA,CAACN,MAAM,EAACgC,QAAQ,CAAE,CAAC,QAAQ,CAAE,CAAC,QAAQ,CAAE,CAACnB,IAAI,CAAED,OAAQ,CAAAkB,QAAA,cACnDxB,IAAA,CAACL,KAAK,EAAA6B,QAAA,CAAC,KAAG,CAAO,CAAC,CACd,CAAC,EACC,CAAC,CAEvB,CAEA,cAAe,CAAArB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}