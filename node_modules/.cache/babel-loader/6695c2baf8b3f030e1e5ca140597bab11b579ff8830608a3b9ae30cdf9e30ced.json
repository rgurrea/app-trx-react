{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/traxiapp/src/components/vehicle/vehicleUpdateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VehicleUpdateForm({\n  vehicleId\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  vehicleId = id;\n  const [formData, setFormData] = useState({\n    BRAND: '',\n    MODEL: '',\n    YEAR: '',\n    COLOR: '',\n    placa: '',\n    'numero economico': '',\n    vim: '',\n    asientos: '',\n    seguro: '',\n    'segure numebr': ''\n  });\n  const [modifiedFields, setModifiedFields] = useState({}); // Estado para almacenar los campos modificados\n  const [emptyFields, setEmptyFields] = useState([]);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchVehicleData = async () => {\n      try {\n        const response = await axios.get(`https://www.api.merakimx.mx/gpd/vehicle/ads/${vehicleId}`);\n        const vehicleData = response.data;\n        setFormData(vehicleData);\n      } catch (error) {\n        console.error('Error al obtener los datos del vehículo:', error);\n      }\n    };\n    fetchVehicleData();\n  }, [vehicleId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setModifiedFields({\n      ...modifiedFields,\n      [name]: value\n    });\n    if (emptyFields.includes(name) && value !== '') {\n      setEmptyFields(emptyFields.filter(field => field !== name));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formDataWithoutIdAndStatus = Object.fromEntries(Object.entries(modifiedFields).filter(([key]) => key !== '_id' && key !== 'status'));\n    console.log('formDataWithoutIdAndStatus----', formDataWithoutIdAndStatus);\n    const emptyFieldsArray = Object.keys(formDataWithoutIdAndStatus).filter(key => formDataWithoutIdAndStatus[key] === '');\n    if (emptyFieldsArray.length > 0) {\n      setEmptyFields(emptyFieldsArray);\n    } else {\n      setEmptyFields([]);\n      setLoading(true);\n      try {\n        const response = await axios.put(`https://www.api.merakimx.mx/gpd/vehicle/${vehicleId}`, formDataWithoutIdAndStatus);\n        console.log('Datos del formulario actualizados correctamente.');\n        setSuccessMessage('¡Los datos del formulario se actualizaron correctamente!');\n        setTimeout(() => {\n          window.location.href = '/';\n        }, 2000);\n      } catch (error) {\n        console.error('Error al enviar los datos del formulario:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Actualizaci\\xF3n de Veh\\xEDculo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '7%'\n      },\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enviando datos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n          gap: \"1rem\"\n        },\n        children: [Object.entries(formData).map(([key, value]) =>\n        // Excluye _id y status del mapeo\n        key !== '_id' && key !== 'status' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateRows: \"auto 1fr\",\n            gap: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: [key, emptyFields.includes(key) && \" *\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this), key === 'YEAR' || key === 'asientos' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: key,\n            name: key,\n            value: value,\n            onChange: handleChange,\n            required: true,\n            style: {\n              height: '25px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            value: value,\n            onChange: handleChange,\n            required: true,\n            style: {\n              height: '25px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 41\n          }, this), emptyFields.includes(key) && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Campo requerido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 67\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            gridColumn: \"1 / -1\",\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              color: 'white',\n              textDecoration: 'none',\n              padding: '10px 20px',\n              borderRadius: '5px',\n              backgroundColor: '#007bff',\n              border: 'aliceblue'\n            },\n            children: \"Actualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green',\n          marginTop: '10px'\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(VehicleUpdateForm, \"giOsAtL+BQwfOzxuPjuh3FeDt98=\", false, function () {\n  return [useParams];\n});\n_c = VehicleUpdateForm;\nexport default VehicleUpdateForm;\nvar _c;\n$RefreshReg$(_c, \"VehicleUpdateForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","VehicleUpdateForm","vehicleId","_s","id","formData","setFormData","BRAND","MODEL","YEAR","COLOR","placa","vim","asientos","seguro","modifiedFields","setModifiedFields","emptyFields","setEmptyFields","successMessage","setSuccessMessage","loading","setLoading","fetchVehicleData","response","get","vehicleData","data","error","console","handleChange","e","name","value","target","includes","filter","field","handleSubmit","preventDefault","formDataWithoutIdAndStatus","Object","fromEntries","entries","key","log","emptyFieldsArray","keys","length","put","setTimeout","window","location","href","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","margin","onSubmit","display","gridTemplateColumns","gap","map","gridTemplateRows","htmlFor","type","onChange","required","height","color","gridColumn","textDecoration","padding","borderRadius","backgroundColor","border","marginTop","_c","$RefreshReg$"],"sources":["/Users/rodrigo/Desktop/traxiapp/src/components/vehicle/vehicleUpdateForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction VehicleUpdateForm({ vehicleId }) {\n    const { id } = useParams();\n    vehicleId = id;\n\n    const [formData, setFormData] = useState({\n        BRAND: '',\n        MODEL: '',\n        YEAR: '',\n        COLOR: '',\n        placa: '',\n        'numero economico': '',\n        vim: '',\n        asientos: '',\n        seguro: '',\n        'segure numebr': ''\n    });\n\n    const [modifiedFields, setModifiedFields] = useState({}); // Estado para almacenar los campos modificados\n    const [emptyFields, setEmptyFields] = useState([]);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchVehicleData = async () => {\n            try {\n                const response = await axios.get(`https://www.api.merakimx.mx/gpd/vehicle/ads/${vehicleId}`);\n                const vehicleData = response.data;\n                setFormData(vehicleData);\n            } catch (error) {\n                console.error('Error al obtener los datos del vehículo:', error);\n            }\n        };\n\n        fetchVehicleData();\n    }, [vehicleId]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value\n        });\n        setModifiedFields({\n            ...modifiedFields,\n            [name]: value\n        });\n        if (emptyFields.includes(name) && value !== '') {\n            setEmptyFields(emptyFields.filter(field => field !== name));\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formDataWithoutIdAndStatus = Object.fromEntries(\n            Object.entries(modifiedFields).filter(([key]) => key !== '_id' && key !== 'status')\n        );\n        console.log('formDataWithoutIdAndStatus----', formDataWithoutIdAndStatus)\n        const emptyFieldsArray = Object.keys(formDataWithoutIdAndStatus).filter(key => formDataWithoutIdAndStatus[key] === '');\n        if (emptyFieldsArray.length > 0) {\n            setEmptyFields(emptyFieldsArray);\n        } else {\n            setEmptyFields([]);\n            setLoading(true);\n            try {\n                const response = await axios.put(`https://www.api.merakimx.mx/gpd/vehicle/${vehicleId}`, formDataWithoutIdAndStatus);\n                console.log('Datos del formulario actualizados correctamente.');\n                setSuccessMessage('¡Los datos del formulario se actualizaron correctamente!');\n                setTimeout(() => {\n                    window.location.href = '/';\n                }, 2000);\n            } catch (error) {\n                console.error('Error al enviar los datos del formulario:', error);\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n\n    return (\n        <div>\n            <h2 style={{ textAlign: 'center' }}>Actualización de Vehículo</h2>\n            <div style={{ margin: '7%' }}>\n                {loading ? (\n                    <div style={{ textAlign: 'center' }}>\n                        <p>Enviando datos...</p>\n                    </div>\n                ) : (\n                    <form\n                        onSubmit={handleSubmit}\n                        style={{\n                            display: \"grid\",\n                            gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n                            gap: \"1rem\",\n                        }}\n                    >\n                        {Object.entries(formData).map(([key, value]) => (\n                            // Excluye _id y status del mapeo\n                            key !== '_id' && key !== 'status' && (\n                                <div key={key} style={{ display: \"grid\", gridTemplateRows: \"auto 1fr\", gap: \"0.5rem\" }}>\n                                    <label htmlFor={key}>{key}{emptyFields.includes(key) && \" *\"}:</label>\n                                    {key === 'YEAR' || key === 'asientos' ? (\n                                        <input\n                                            type=\"number\"\n                                            id={key}\n                                            name={key}\n                                            value={value}\n                                            onChange={handleChange}\n                                            required\n                                            style={{ height: '25px' }}\n                                        />\n                                    ) : (\n                                        <input\n                                            type=\"text\"\n                                            id={key}\n                                            name={key}\n                                            value={value}\n                                            onChange={handleChange}\n                                            required\n                                            style={{ height: '25px' }}\n                                        />\n                                    )}\n                                    {emptyFields.includes(key) && <span style={{ color: 'red' }}>Campo requerido</span>}\n                                </div>\n                            )\n                        ))}\n\n                        <div style={{ gridColumn: \"1 / -1\", textAlign: \"center\" }}>\n                            <button type=\"submit\" style={{ color: 'white', textDecoration: 'none', padding: '10px 20px', borderRadius: '5px', backgroundColor: '#007bff', border: 'aliceblue', }}>Actualizar</button>\n                        </div>\n                    </form>\n                )}\n                {successMessage && (\n                    <div style={{ color: 'green', marginTop: '10px' }}>\n                        {successMessage}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default VehicleUpdateForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,iBAAiBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1BI,SAAS,GAAGE,EAAE;EAEd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACrCY,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACT,kBAAkB,EAAE,EAAE;IACtBC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACV,eAAe,EAAE;EACrB,CAAC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,MAAM2B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAE,+CAA8CvB,SAAU,EAAC,CAAC;QAC5F,MAAMwB,WAAW,GAAGF,QAAQ,CAACG,IAAI;QACjCrB,WAAW,CAACoB,WAAW,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MACpE;IACJ,CAAC;IAEDL,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACrB,SAAS,CAAC,CAAC;EAEf,MAAM4B,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC5B,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAAC2B,IAAI,GAAGC;IACZ,CAAC,CAAC;IACFjB,iBAAiB,CAAC;MACd,GAAGD,cAAc;MACjB,CAACiB,IAAI,GAAGC;IACZ,CAAC,CAAC;IACF,IAAIhB,WAAW,CAACkB,QAAQ,CAACH,IAAI,CAAC,IAAIC,KAAK,KAAK,EAAE,EAAE;MAC5Cf,cAAc,CAACD,WAAW,CAACmB,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAKL,IAAI,CAAC,CAAC;IAC/D;EACJ,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOP,CAAC,IAAK;IAC9BA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB,MAAMC,0BAA0B,GAAGC,MAAM,CAACC,WAAW,CACjDD,MAAM,CAACE,OAAO,CAAC5B,cAAc,CAAC,CAACqB,MAAM,CAAC,CAAC,CAACQ,GAAG,CAAC,KAAKA,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,QAAQ,CACtF,CAAC;IACDf,OAAO,CAACgB,GAAG,CAAC,gCAAgC,EAAEL,0BAA0B,CAAC;IACzE,MAAMM,gBAAgB,GAAGL,MAAM,CAACM,IAAI,CAACP,0BAA0B,CAAC,CAACJ,MAAM,CAACQ,GAAG,IAAIJ,0BAA0B,CAACI,GAAG,CAAC,KAAK,EAAE,CAAC;IACtH,IAAIE,gBAAgB,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7B9B,cAAc,CAAC4B,gBAAgB,CAAC;IACpC,CAAC,MAAM;MACH5B,cAAc,CAAC,EAAE,CAAC;MAClBI,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAME,QAAQ,GAAG,MAAM3B,KAAK,CAACoD,GAAG,CAAE,2CAA0C/C,SAAU,EAAC,EAAEsC,0BAA0B,CAAC;QACpHX,OAAO,CAACgB,GAAG,CAAC,kDAAkD,CAAC;QAC/DzB,iBAAiB,CAAC,0DAA0D,CAAC;QAC7E8B,UAAU,CAAC,MAAM;UACbC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;QAC9B,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,CAAC,OAAOzB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACrE,CAAC,SAAS;QACNN,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;EACJ,CAAC;EAGD,oBACItB,OAAA;IAAAsD,QAAA,gBACItD,OAAA;MAAIuD,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAyB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClE5D,OAAA;MAAKuD,KAAK,EAAE;QAAEM,MAAM,EAAE;MAAK,CAAE;MAAAP,QAAA,GACxBjC,OAAO,gBACJrB,OAAA;QAAKuD,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAF,QAAA,eAChCtD,OAAA;UAAAsD,QAAA,EAAG;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,gBAEN5D,OAAA;QACI8D,QAAQ,EAAExB,YAAa;QACvBiB,KAAK,EAAE;UACHQ,OAAO,EAAE,MAAM;UACfC,mBAAmB,EAAE,uCAAuC;UAC5DC,GAAG,EAAE;QACT,CAAE;QAAAX,QAAA,GAEDb,MAAM,CAACE,OAAO,CAACtC,QAAQ,CAAC,CAAC6D,GAAG,CAAC,CAAC,CAACtB,GAAG,EAAEX,KAAK,CAAC;QACvC;QACAW,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,QAAQ,iBAC7B5C,OAAA;UAAeuD,KAAK,EAAE;YAAEQ,OAAO,EAAE,MAAM;YAAEI,gBAAgB,EAAE,UAAU;YAAEF,GAAG,EAAE;UAAS,CAAE;UAAAX,QAAA,gBACnFtD,OAAA;YAAOoE,OAAO,EAAExB,GAAI;YAAAU,QAAA,GAAEV,GAAG,EAAE3B,WAAW,CAACkB,QAAQ,CAACS,GAAG,CAAC,IAAI,IAAI,EAAC,GAAC;UAAA;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACrEhB,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,UAAU,gBACjC5C,OAAA;YACIqE,IAAI,EAAC,QAAQ;YACbjE,EAAE,EAAEwC,GAAI;YACRZ,IAAI,EAAEY,GAAI;YACVX,KAAK,EAAEA,KAAM;YACbqC,QAAQ,EAAExC,YAAa;YACvByC,QAAQ;YACRhB,KAAK,EAAE;cAAEiB,MAAM,EAAE;YAAO;UAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,gBAEF5D,OAAA;YACIqE,IAAI,EAAC,MAAM;YACXjE,EAAE,EAAEwC,GAAI;YACRZ,IAAI,EAAEY,GAAI;YACVX,KAAK,EAAEA,KAAM;YACbqC,QAAQ,EAAExC,YAAa;YACvByC,QAAQ;YACRhB,KAAK,EAAE;cAAEiB,MAAM,EAAE;YAAO;UAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CACJ,EACA3C,WAAW,CAACkB,QAAQ,CAACS,GAAG,CAAC,iBAAI5C,OAAA;YAAMuD,KAAK,EAAE;cAAEkB,KAAK,EAAE;YAAM,CAAE;YAAAnB,QAAA,EAAC;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAvB7EhB,GAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBR,CAEZ,CAAC,eAEF5D,OAAA;UAAKuD,KAAK,EAAE;YAAEmB,UAAU,EAAE,QAAQ;YAAElB,SAAS,EAAE;UAAS,CAAE;UAAAF,QAAA,eACtDtD,OAAA;YAAQqE,IAAI,EAAC,QAAQ;YAACd,KAAK,EAAE;cAAEkB,KAAK,EAAE,OAAO;cAAEE,cAAc,EAAE,MAAM;cAAEC,OAAO,EAAE,WAAW;cAAEC,YAAY,EAAE,KAAK;cAAEC,eAAe,EAAE,SAAS;cAAEC,MAAM,EAAE;YAAa,CAAE;YAAAzB,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACT,EACAzC,cAAc,iBACXnB,OAAA;QAAKuD,KAAK,EAAE;UAAEkB,KAAK,EAAE,OAAO;UAAEO,SAAS,EAAE;QAAO,CAAE;QAAA1B,QAAA,EAC7CnC;MAAc;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzD,EAAA,CA5IQF,iBAAiB;EAAA,QACPH,SAAS;AAAA;AAAAmF,EAAA,GADnBhF,iBAAiB;AA8I1B,eAAeA,iBAAiB;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}