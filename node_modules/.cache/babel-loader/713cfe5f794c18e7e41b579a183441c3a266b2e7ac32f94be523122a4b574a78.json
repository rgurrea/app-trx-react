{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/traxiapp/src/components/maps/Mapa.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport carIconImg from '../../car.svg';\n//import datosGeoJSON from '../maps/datosGeoJSON'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mapa() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [routeData, setRouteData] = useState(null); // Estado para almacenar los datos de la ruta\n\n  // Define el icono del carro\n  const carIcon = L.icon({\n    iconUrl: carIconImg,\n    // Ruta al icono de carro\n    iconSize: [32, 32] // Tama침o del icono\n  });\n\n  // Funci칩n para trazar la ruta en el mapa\n  const TrazarRuta = () => {\n    _s();\n    const map = useMap();\n    const coordinates = [[19.5, -99.14946],\n    // Coordenadas del primer punto (latitud, longitud)\n    [19.47101, -99.13781],\n    // Coordenadas del segundo punto (latitud, longitud)\n    [19.37101, -99.12781]];\n    const polyline = L.polyline(coordinates, {\n      color: 'blue'\n    }).addTo(map);\n    // Ajusta el mapa para que se ajuste a la ruta\n    map.fitBounds(polyline.getBounds());\n    return null;\n  };\n  _s(TrazarRuta, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n    return [useMap];\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [19.5, -99.14946],\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: 'auto',\n      margin: '33px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TrazarRuta, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [19.50047, -99.14946],\n      icon: carIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [19.47101, -99.13781],\n      icon: carIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Fin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s2(Mapa, \"1XF0CTjm1WQ3P/xIJcQNwryXYrA=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","useMap","L","carIconImg","jsxDEV","_jsxDEV","Mapa","_s2","_s","$RefreshSig$","routeData","setRouteData","carIcon","icon","iconUrl","iconSize","TrazarRuta","map","coordinates","polyline","color","addTo","fitBounds","getBounds","center","zoom","style","height","width","margin","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["/Users/rodrigo/Desktop/traxiapp/src/components/maps/Mapa.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport carIconImg from '../../car.svg';\n//import datosGeoJSON from '../maps/datosGeoJSON'\n\nfunction Mapa() {\n    const [routeData, setRouteData] = useState(null); // Estado para almacenar los datos de la ruta\n\n    // Define el icono del carro\n    const carIcon = L.icon({\n        iconUrl: carIconImg, // Ruta al icono de carro\n        iconSize: [32, 32], // Tama침o del icono\n    });\n\n    // Funci칩n para trazar la ruta en el mapa\n    const TrazarRuta = () => {\n        const map = useMap();\n       \n        const coordinates = [\n            [19.5, -99.14946], // Coordenadas del primer punto (latitud, longitud)\n            [19.47101, -99.13781],   // Coordenadas del segundo punto (latitud, longitud)\n            [19.37101, -99.12781],\n        ];\n            const polyline = L.polyline(coordinates, { color: 'blue' }).addTo(map);\n            // Ajusta el mapa para que se ajuste a la ruta\n            map.fitBounds(polyline.getBounds());\n        return null;\n    };\n\n    return (\n        <MapContainer center={[19.5, -99.14946]} zoom={13} style={{ height: '400px',width: 'auto',margin: '33px' }}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n            <TrazarRuta />\n            {/* Renderiza el marcador de inicio */}\n            <Marker position={[19.50047, -99.14946]} icon={carIcon}>\n                <Popup>Inicio</Popup>\n            </Marker>\n            {/* Renderiza el marcador de fin */}\n            <Marker position={[19.47101, -99.13781]} icon={carIcon}>\n                <Popup>Fin</Popup>\n            </Marker>\n        </MapContainer>\n    );\n}\n\nexport default Mapa;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}