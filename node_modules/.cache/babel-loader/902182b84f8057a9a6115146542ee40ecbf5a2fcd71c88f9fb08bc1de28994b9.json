{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/traxiapp/src/components/maps/Mapa.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport carIconImg from '../../car.svg';\nimport datosGeoJSON from '../maps/datosGeoJSON';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mapa() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [routeData, setRouteData] = useState(null); // Estado para almacenar los datos de la ruta\n\n  useEffect(() => {\n    // Llama a la función para obtener datos de la ruta cuando el componente se monta\n    obtenerDatosDeRuta();\n  }, []);\n\n  // Función para obtener datos de la ruta utilizando OpenRouteService\n  const obtenerDatosDeRuta = async () => {\n    try {\n      setRouteData(datosGeoJSON);\n    } catch (error) {\n      console.error('Error al obtener datos de la ruta:', error);\n    }\n  };\n\n  // Define el icono del carro\n  const carIcon = L.icon({\n    iconUrl: carIconImg,\n    // Ruta al icono de carro\n    iconSize: [32, 32] // Tamaño del icono\n  });\n\n  // Función para trazar la ruta en el mapa\n  const TrazarRuta = () => {\n    _s();\n    const map = useMap();\n    if (routeData) {\n      const coordinates = routeData[0].geojson.features[0].geometry.coordinates;\n      // Toma las coordenadas y crea una ruta\n      const polyline = L.polyline(coordinates, {\n        color: 'blue'\n      }).addTo(map);\n      // Ajusta el mapa para que se ajuste a la ruta\n      map.fitBounds(polyline.getBounds());\n    }\n    return null;\n  };\n  _s(TrazarRuta, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n    return [useMap];\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [19.5, -99.14946],\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TrazarRuta, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [19.50047, -99.14946],\n      icon: carIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [19.47101, -99.13781],\n      icon: carIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Fin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s2(Mapa, \"Mmp2+a5TYsVLYC88K2fx9yF/8vs=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","useMap","L","carIconImg","datosGeoJSON","jsxDEV","_jsxDEV","Mapa","_s2","_s","$RefreshSig$","routeData","setRouteData","obtenerDatosDeRuta","error","console","carIcon","icon","iconUrl","iconSize","TrazarRuta","map","coordinates","geojson","features","geometry","polyline","color","addTo","fitBounds","getBounds","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["/Users/rodrigo/Desktop/traxiapp/src/components/maps/Mapa.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport carIconImg from '../../car.svg';\nimport datosGeoJSON from '../maps/datosGeoJSON'\n\nfunction Mapa() {\n    const [routeData, setRouteData] = useState(null); // Estado para almacenar los datos de la ruta\n\n    useEffect(() => {\n        // Llama a la función para obtener datos de la ruta cuando el componente se monta\n        obtenerDatosDeRuta();\n    }, []);\n\n    // Función para obtener datos de la ruta utilizando OpenRouteService\n    const obtenerDatosDeRuta = async () => {\n        try {\n            setRouteData(datosGeoJSON);\n        } catch (error) {\n            console.error('Error al obtener datos de la ruta:', error);\n        }\n    };\n\n    // Define el icono del carro\n    const carIcon = L.icon({\n        iconUrl: carIconImg, // Ruta al icono de carro\n        iconSize: [32, 32], // Tamaño del icono\n    });\n\n    // Función para trazar la ruta en el mapa\n    const TrazarRuta = () => {\n        const map = useMap();\n        if (routeData) {\n            const coordinates = routeData[0].geojson.features[0].geometry.coordinates;\n            // Toma las coordenadas y crea una ruta\n            const polyline = L.polyline(coordinates, { color: 'blue' }).addTo(map);\n            // Ajusta el mapa para que se ajuste a la ruta\n            map.fitBounds(polyline.getBounds());\n        }\n        return null;\n    };\n\n    return (\n        <MapContainer center={[19.5, -99.14946]} zoom={13} style={{ height: '400px', width: '100%' }}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n            {/* Renderiza la ruta */}\n            <TrazarRuta />\n            {/* Renderiza el marcador de inicio */}\n            <Marker position={[19.50047, -99.14946]} icon={carIcon}>\n                <Popup>Inicio</Popup>\n            </Marker>\n            {/* Renderiza el marcador de fin */}\n            <Marker position={[19.47101, -99.13781]} icon={carIcon}>\n                <Popup>Fin</Popup>\n            </Marker>\n        </MapContainer>\n    );\n}\n\nexport default Mapa;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}